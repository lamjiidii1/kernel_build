name: Build MSM-4.19


on:
  workflow_dispatch:


jobs:
  build-kernel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Pull toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 aarch64-linux-android-4.9
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 arm-linux-androideabi-4.9
          mkdir clang && curl https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-release/clang-r487747c.tar.gz -RLO && tar -C clang/ -xf clang-*.tar.gz

      - name: Pull kernel source
        run: |
          git clone --depth=1 https://github.com/crdroidandroid/android_kernel_xiaomi_sm8250 -b 13.0-alioth kernel-source
          export KERNEL_PATH=kernel-source

      - name: Checkout Kernel-SU
        run: |
          git submodule update --init

      - name: Setup environment
        run: |
          sh -c "$(curl -sSL https://github.com/akhilnarang/scripts/raw/master/setup/android_build_env.sh/)"
          KERNEL_DEFCONFIG=alioth_defconfig
          ANYKERNEL3_DIR=$PWD/AnyKernel3/
          FINAL_KERNEL_ZIP=InfiniR_Alioth_v2.77.zip
          export ARCH=arm64

          MAKE="./makeparallel"

          BUILD_START=$(date +"%s")
          blue='\033[1;34m'
          yellow='\033[1;33m'
          nocol='\033[0m'

      - name: Build kernel
        run: |
          cd KERNEL_PATH

          echo -e "$yellow**** Cleaning ****$nocol"
          mkdir -p out
          make O=out clean

          echo -e "$yellow**** Kernel defconfig is set to $KERNEL_DEFCONFIG ****$nocol"
          echo -e "$blue***********************************************"
          echo "          BUILDING KERNEL          "
          echo -e "***********************************************$nocol"
          make $KERNEL_DEFCONFIG O=out
          make -j$(nproc --all) O=out \
                                ARCH=arm64 \
                                CC=$GITHUB_WORKSPACE/clang/bin/clang \
                                CLANG_TRIPLE=aarch64-linux-gnu- \
                                CROSS_COMPILE=$GITHUB_WORKSPACE/aarch64-linux-android-4.9/bin/aarch64-linux-android- \
                                CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-

      - name: "Upload Kernel Image"
        uses: actions/upload-artifact@v3
        with:
          name: Image-${{ env.KERNEL_VERSION }}_${{ env.KERNEL_TARGET }}
          path: out/arch/arm64/boot/Image
          if-no-files-found: ignore

      - name: "Upload dtbo.img"
        uses: actions/upload-artifact@v3
        with:
          name: dtbo.img-${{ env.KERNEL_VERSION }}_${{ env.KERNEL_TARGET }}
          path: out/arch/arm64/boot/dtbo.img
          if-no-files-found: ignore

      - name: "Upload dtb"
        uses: actions/upload-artifact@v3
        with:
          name: dtb-${{ env.KERNEL_VERSION }}_${{ env.KERNEL_TARGET }}
          path: out/arch/arm64/boot/dts/vendor/qcom/kona.dtb
          if-no-files-found: ignore
